version: '3.8'

services:
  exonov-quantum:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - N8N_BASE_URL=${N8N_BASE_URL:-https://exonov-u39090.vm.elestio.app}
      - N8N_API_KEY=${N8N_API_KEY}
      - N8N_WEBHOOK_SECRET=${N8N_WEBHOOK_SECRET}
      - POSTGRES_URL=${POSTGRES_URL}
      - AUTH_SECRET=${AUTH_SECRET}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - IBM_QUANTUM_TOKEN=${IBM_QUANTUM_TOKEN}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AZURE_SUBSCRIPTION_ID=${AZURE_SUBSCRIPTION_ID}
      - GOOGLE_QUANTUM_API_KEY=${GOOGLE_QUANTUM_API_KEY}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/quantum?action=health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      - postgres
    networks:
      - exonov-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=exonov_quantum
      - POSTGRES_USER=${POSTGRES_USER:-exonov}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - exonov-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - exonov-network
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:

networks:
  exonov-network:
    driver: bridge
